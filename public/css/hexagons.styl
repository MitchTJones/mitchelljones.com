* {
	margin: 0;
	padding: 0;
}

#hexGrid {
	display: flex;
	flex-wrap: wrap;
	width: 100%;
	margin: 0 auto;
	overflow: hidden;
	font-family: 'Raleway', sans-serif;
	font-size: 13px;
	list-style-type: none;
	padding:25px;
}

.hex {
	position: relative;
	visibility:hidden;
	outline:1px solid transparent;
	transition: all .2s ease-in-out;
}

.hex::after{
	content:'';
	display:block;
	padding-bottom: 86.602%;
}
.hexIn{
	position: absolute;
	width:96%;
	padding-bottom: 110.851%;
	margin:0 2%;
	overflow: hidden;
	visibility: hidden;
	outline:1px solid transparent;
	-webkit-transform: rotate3d(0,0,1,-60deg) skewY(30deg);
	-ms-transform: rotate3d(0,0,1,-60deg) skewY(30deg);
	transform: rotate3d(0,0,1,-60deg) skewY(30deg);
}
.hexIn * {
	position: absolute;
	visibility: visible;
	outline:1px solid transparent;
}
.hexLink {
	display:block;
	width: 100%;
	height: 100%;
	text-align: center;
	color: #fff;
	overflow: hidden;
	-webkit-transform: skewY(-30deg) rotate3d(0,0,1,60deg);
	-ms-transform: skewY(-30deg) rotate3d(0,0,1,60deg);
	transform: skewY(-30deg) rotate3d(0,0,1,60deg);
}

.hex img {
	left: -100%;
	right: -100%;
	width: auto;
	height: 100%;
	margin: 0 auto;
	-webkit-transform: rotate3d(0,0,0,0deg);
	-ms-transform: rotate3d(0,0,0,0deg);
	transform: rotate3d(0,0,0,0deg);
}

.hex h1, .hex p, .hex h2 {
	width: 100%;
	padding: 5%;
	box-sizing:border-box;
	font-weight: 300;
	-webkit-transition:  -webkit-transform .2s ease-out, opacity .2s ease-out;
	transition:          transform .2s ease-out, opacity .2s ease-out;
	opacity:0;
}
.hex h1 {
	bottom: 50%;
	padding-top:50%;
	margin-bottom:0px;
}
.hex h2 {
	background-color:rgba(255,0,0,0.75);
	color:white;
	bottom: 42%;
	font-size: 1.5em;
	margin-bottom:0px;
	z-index:1;
}
.hex h2::after {
}
.hex h1::after {
	content: '';
	position: absolute;
	bottom: 0;
	left: 45%;
	width: 10%;
	text-align: center;
	margin-bottom:0px;
}
.hex p {
	top: 50%;
	padding-bottom:50%;
}

.hexLink:hover h1, .hexLink:focus h1,
.hexLink:hover h2, .hexLink:focus h2,
.hexLink:hover p, .hexLink:focus p{
	opacity:1;
}

hexes = {
	a:{
		min:1451px,
		max:10000px,
		num:6
	},
	b:{
		min:1276px,
		max:1450px,
		num:5
	},
	c:{
		min:1001px,
		max:1275px,
		num:4
	},
	d:{
		min:0px,
		max:1000px,
		num:3
	}
}

for n,h in hexes
	@media (max-width:h.max) and (min-width:h.min)
		numOdd = h.num
		numEven = numOdd - 1
		w = 100% / numOdd;
		#hexGrid
			padding-bottom: (w/2)%
		.hex
			width: w;
		na = numOdd + numEven
		.hex:nth-child({(numOdd + numEven)}n+{numOdd+1})
			margin-left:(w/2)
	
@media only screen and (max-width: 750px)
	.hex h1
		font-size: 1.5em;
			
@media only screen and (max-width: 500px)
	.hex h1
		font-size: 1em;
	.hex p
		font-size: 0.7em;